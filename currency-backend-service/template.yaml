apiVersion: v1
kind: Template
metadata:
  name: java-template
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${APPLICATION_NAME}
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        volumes:
          - name: keystore-volume
            emtpyDir: {}
          - name: ${APPLICATION_NAME}
            secret:
              secretName: ${APPLICATION_NAME}
        containers:
        - name: ${APPLICATION_NAME}
          image: itsaurabh/backendsvc:ocp43
          imagePullPolicy: Always
          ports:
          - name: https
            containerPort: 6443
            protocol: TCP
          - name: http
            containerPort: 5080
            protocol: TCP
          env:
            - name: keystore_jks
              value: /var/run/secrets/java.io/keystores/keystore.jks
            - name: password
              value: changeit
          resources: {}
          volumeMounts:
            - name: keystore-volume
              mountPath: /var/run/secrets/java.io/keystores
        initContainers:
        - name: pem-to-keystore
          image: registry.access.redhat.com/redhat-sso-7/sso71-openshift:1.1-16
          env:
            - name: keyfile
              value: /var/run/secrets/openshift.io/services_serving_certs/tls.key
            - name: crtfile
              value: /var/run/secrets/openshift.io/services_serving_certs/tls.crt
            - name: keystore_pkcs12
              value: /var/run/secrets/java.io/keystores/keystore.pkcs12
            - name: keystore_jks
              value: /var/run/secrets/java.io/keystores/keystore.jks
            - name: password
              value: changeit
          command: ['/bin/bash']
          args: ['-c', "openssl pkcs12 -export -inkey $keyfile -in $crtfile -out $keystore_pkcs12 -password pass:$password && keytool -importkeystore -noprompt -srckeystore $keystore_pkcs12 -srcstoretype pkcs12 -destkeystore $keystore_jks -storepass $password -srcstorepass $password"]
          volumeMounts:
            - name: keystore-volume
              mountPath: /var/run/secrets/java.io/keystores
            - name: ${APPLICATION_NAME}
              mountPath: /var/run/secrets/openshift.io/services_serving_certs
      restartPolicy: Always
      securityContext: {}
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    port:
      targetPort: 8443-tcp
    tls:
      termination: reencrypt
    to:
      kind: Service
      name: ${APPLICATION_NAME}
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.beta.openshift.io/serving-cert-secret-name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 6443
    - name: 5080-tcp
      port: 5080
      protocol: TCP
      targetPort: 5080
    selector:
      deploymentconfig: ${APPLICATION_NAME}
parameters:
- name: APPLICATION_NAME
  description: The name for the application.
  displayName: Application name
  value: backendsvc
  required: true
